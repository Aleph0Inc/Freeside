#  Copyright (C) 2004  Stanislav Sinyagin
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

# $Id: torrus_schedulerinfo.pod.in,v 1.1 2010-12-27 00:04:39 ivan Exp $
# Stanislav Sinyagin <ssinyagin@yahoo.com>
#
#

=head1 NAME

schedulerinfo - Displays extended scheduler tasks information.

=head1 SYNOPSIS

B<torrus schedulerinfo> --tree=I<TREENAME> [I<options...>]

=head1 DESCRIPTION

This utility displays the extended scheduler tasks information for tree
I<TREENAME> on standard output. This might be useful for scheduler planning
and analysis.

=head1 OPTIONS

=over 4

=item B<--config>

Reports scheduler's configuration. The values are explained below.

=over 8

=item Total collector/monitor leaves: I<N>

Total number of datasources being processed by collector or monitor daemon.

=item Scheduled leaves by type

Torrus supports arbitrary number of collector types, and this report
shows how many datasources belong to every type. Currently the monitor leaves
are not divided into types.

=item Least common period: I<N> seconds

The report below shows how the tasks are distributed across the time line,
and the least common period shows the period of this time line.

=item Tasks execution timeline

This report tells which task and how many datasources are involved in
each task startup event, and how these events are dispersed across the time.
The column I<Interval> shows the time interval from each task execution
event to the next event on the timeline.

=back

=item B<--runtime>

Reports scheduler's runtime statistics, such as running cycle times,
late starts etc. The meaning of the output values is as follows. Values
that have zero values are usually not printed.

=over 8

=item Task: I<Name>, Period: I<N> seconds, Offset: I<M> seconds

Each scheduler task is characterized by its name (usually Collector or
Monitor), period, and timeoffset. Fore example, if period is set to 300
seconds, and offset is 14 seconds, then the task would be executed at
00:00:14, 00:05:14, 00:10:14, and so on for every hour in a day.

=item I<N> running cycles passed

How many times the task was executed since last reset. The counter
is normally reset after L<torrus_compilexml(@mansec_usercmd@)> successfully
compiles the configuration.

=item I<N> late starts

How many times the task has started with a delay from its normal schedule.

=item I<N> too long runs

How many times the task execution time was longer than its period.

=item I<N> overrun periods

How many periods have been missed because of too long executions.

=item I<N> missed periods

How many periods were missed because of any reason (such as other tasks
delaying).

=item Min, Max, Average, Exp Average

The time values are displayed in four columns: Mimimum, Maximum and Average
values since last reset, and Exponential decay value, which may be interpreted
as the average for last several values. With defaults defined in
F<torrus-config.pl>, 95% of the average is calculated from last 3 values.

=item Running Time

How long the task executes each period.

=item Late Start

How long the task start was delayed.

=item Too Long

How much time the too long run took.

=item RRD Queue

In a multithreaded environment, the RRD files are writen in a background
thread. This value shows the length of the RRD update queue at the beginning
of each update cycle.

=back

=item B<--help>

Displays a help message.

=back



=head1 SEE ALSO

L<torrus(@mansec_usercmd@)>,
L<torrus_compilexml(@mansec_usercmd@)>

=head1 NOTES

See more documentation at Torrus home page: http://torrus.org

=head1 AUTHOR

Stanislav Sinyagin E<lt>ssinyagin@yahoo.comE<gt>
